package com.example.chat_toolbar;import android.app.DatePickerDialog;import android.content.Context;import android.content.Intent;import android.os.Bundle;import android.text.TextUtils;import android.view.View;import android.widget.AdapterView;import android.widget.Button;import android.widget.DatePicker;import android.widget.EditText;import android.widget.RadioButton;import android.widget.RadioGroup;import android.widget.TextView;import android.widget.Toast;import androidx.annotation.IdRes;import androidx.appcompat.app.AppCompatActivity;import androidx.appcompat.widget.Toolbar;import com.google.android.gms.tasks.OnCompleteListener;import com.google.android.gms.tasks.Task;import com.google.android.material.textfield.TextInputEditText;import com.google.firebase.auth.AuthResult;import com.google.firebase.auth.FirebaseAuth;import com.google.firebase.auth.FirebaseUser;import com.google.firebase.database.DatabaseReference;import com.google.firebase.database.FirebaseDatabase;import java.util.Calendar;import java.util.HashMap;public class RegisterActivity extends AppCompatActivity implements AdapterView.OnItemSelectedListener {    TextInputEditText fullname, username, email, password, confirm, phone;    EditText age;    RadioGroup radioGroup;    RadioButton male, female;    TextView tvDate;    DatePickerDialog.OnDateSetListener setListener;    //Spinner age, country;    String item;    //String[] agee = new agee[];    //String[] countries = {"Sana'a","Ibb" };    Button btn_register;    FirebaseAuth auth;    DatabaseReference reference;    private String gender = "";    private int agee;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_register);        Toolbar toolbar = findViewById(R.id.toolbar);        setSupportActionBar(toolbar);        getSupportActionBar().setTitle("Register");        getSupportActionBar().setDisplayHomeAsUpEnabled(true);        fullname = findViewById(R.id.fullname);        username = findViewById(R.id.username);        email = findViewById(R.id.email);        password = findViewById(R.id.password);        confirm = findViewById(R.id.confirm);        phone = findViewById(R.id.phone);        radioGroup = findViewById(R.id.radioGroup);        male = findViewById(R.id.male);        female = findViewById(R.id.female);        age = findViewById(R.id.age);        tvDate = findViewById(R.id.date);        // country = findViewById(R.id.country);        Calendar calendar = Calendar.getInstance();        final int n = calendar.get(1);        final int n2 = calendar.get(2);        final int n3 = calendar.get(5);        setListener = new DatePickerDialog.OnDateSetListener() {            public void onDateSet(DatePicker datePicker, int n, int n2, int n32) {                int n4 = n2 + 1;                StringBuilder stringBuilder = new StringBuilder();                stringBuilder.append(n3);                stringBuilder.append("/");                stringBuilder.append(n4);                stringBuilder.append("/");                stringBuilder.append(n);            }        };        tvDate.setOnClickListener(new View.OnClickListener() {            public void onClick(View view) {                DatePickerDialog datePickerDialog = new DatePickerDialog((Context) RegisterActivity.this, new DatePickerDialog.OnDateSetListener() {                    public void onDateSet(DatePicker datePicker, int n, int n2, int n3) {                        int n4 = n2 + 1;                        StringBuilder stringBuilder = new StringBuilder();                        stringBuilder.append(n3);                        stringBuilder.append("/");                        stringBuilder.append(n4);                        stringBuilder.append("/");                        stringBuilder.append(n);                        String string2 = stringBuilder.toString();                        RegisterActivity.this.tvDate.setText((CharSequence) string2);                    }                }, n, n2, n3);                datePickerDialog.show();            }        });        radioGroup.setOnCheckedChangeListener(new RadioGroup.OnCheckedChangeListener() {            @Override            public void onCheckedChanged(RadioGroup radioGroup, @IdRes int i) {                switch (i){                    case R.id.male:                        gender = "Male";                        break;                    case R.id.female:                        gender = "Female";                        break;                }            }        });        btn_register = findViewById(R.id.btn_register);        auth = FirebaseAuth.getInstance();        btn_register.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                String txt_fullname = fullname.getText().toString();                String txt_username = username.getText().toString();                String txt_email = email.getText().toString();                String txt_password = password.getText().toString();                String txt_confirm = confirm.getText().toString();                String txt_phone = phone.getText().toString();                String txt_gender =gender;                String txt_date = tvDate.getText().toString();                String txt_age = age.getText().toString();                if (TextUtils.isEmpty(txt_fullname) || TextUtils.isEmpty(txt_username) || TextUtils.isEmpty(txt_email) || TextUtils.isEmpty(txt_password)                        || TextUtils.isEmpty(txt_phone) || TextUtils.isEmpty(txt_date) ) {                    Toast.makeText(RegisterActivity.this, "All fields are required", Toast.LENGTH_SHORT).show();                }                else if (!txt_password.equals(txt_confirm)) {                    Toast.makeText(RegisterActivity.this, "Those passwords didnâ€™t match. Try again", Toast.LENGTH_SHORT).show();                }                else if (txt_password.length() < 6) {                    Toast.makeText(RegisterActivity.this, "Password must be at least 6 characters", Toast.LENGTH_SHORT).show();                }                else if (!male.isChecked() && !female.isChecked())                {                    Toast.makeText(RegisterActivity.this, "Specify The Gender", Toast.LENGTH_SHORT).show();                }                else if (phone.length() != 9)                {                    Toast.makeText(RegisterActivity.this, "Enter a valid phone number", Toast.LENGTH_SHORT).show();                }                else if (agee < 18)                {                    Toast.makeText(RegisterActivity.this, "You are not allowed to register in this app", Toast.LENGTH_SHORT).show();                }                else {                    register(txt_fullname, txt_username, txt_email, txt_password, txt_phone, txt_gender, txt_date);                }            }        });    }    private void register(final String fullname, String username, String email, String password, String phone, String gender, String date) {        auth.createUserWithEmailAndPassword(email, password)                .addOnCompleteListener(new OnCompleteListener<AuthResult>() {                    @Override                    public void onComplete(Task<AuthResult> task) {                        if (task.isSuccessful()) {                            FirebaseUser firebaseUser = auth.getCurrentUser();                            assert firebaseUser != null;                            String userid = firebaseUser.getUid();                            reference = FirebaseDatabase.getInstance().getReference("Student").child(userid);                            HashMap<String, String> hashMap = new HashMap<>();                            hashMap.put("id", userid);                            hashMap.put("fullname", fullname);                            hashMap.put("username", username);                            hashMap.put("phone", phone);                            hashMap.put("gender", gender);                            hashMap.put("BirthDate", date);                            hashMap.put("imageURL", "default");                            reference.setValue(hashMap).addOnCompleteListener(new OnCompleteListener<Void>() {                                @Override                                public void onComplete(Task<Void> task) {                                    if (task.isSuccessful()) {                                        Toast.makeText(RegisterActivity.this, "Registered Successfully"                                                , Toast.LENGTH_SHORT).show();                                        Intent intent = new Intent(RegisterActivity.this, MainActivity2.class);                                        intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK | intent.FLAG_ACTIVITY_NEW_TASK);                                        startActivity(intent);                                        finish();                                    }                                }                            });                        } else {                            Toast.makeText(RegisterActivity.this, "You can not register with this email or password"                                    , Toast.LENGTH_SHORT).show();                        }                    }                });    }    @Override    public void onItemSelected(AdapterView<?> adapterView, View view, int i, long l) {    }    @Override    public void onNothingSelected(AdapterView<?> adapterView) {    }}